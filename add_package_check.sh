#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤–æ –≤—Å–µ Ansible —Ä–æ–ª–∏
echo "üîÑ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤–æ –≤—Å–µ Ansible —Ä–æ–ª–∏..."

# –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∏—Ö –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –û–°
declare -A SERVICES
SERVICES["zabbix-server"]="dpkg -l | grep -q zabbix-server-mysql"
SERVICES["grafana"]="dpkg -l | grep -q grafana"
SERVICES["filebeat"]="dpkg -l | grep -q filebeat"
SERVICES["openvpn"]="dpkg -l | grep -q openvpn"
SERVICES["nginx"]="dpkg -l | grep -q nginx"
SERVICES["apache"]="dpkg -l | grep -q apache2"
SERVICES["php"]="dpkg -l | grep -q php"
SERVICES["zabbix-agent"]="dpkg -l | grep -q zabbix-agent"
SERVICES["bind"]="dpkg -l | grep -q bind9"
SERVICES["mail"]="dpkg -l | grep -q postfix"
SERVICES["postgresql"]="dpkg -l | grep -q postgresql"
SERVICES["elk"]="dpkg -l | grep -q elasticsearch"

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
declare -A ROLE_MAPPING
ROLE_MAPPING["zabbix_server"]="monitoring"
ROLE_MAPPING["grafana"]="monitoring"
ROLE_MAPPING["filebeat"]="all"
ROLE_MAPPING["openvpn"]="monitoring"
ROLE_MAPPING["nginx"]="web"
ROLE_MAPPING["apache"]="web"
ROLE_MAPPING["php"]="web"
ROLE_MAPPING["zabbix_agent"]="web database"
ROLE_MAPPING["bind"]="web"
ROLE_MAPPING["mail"]="web"
ROLE_MAPPING["postgresql"]="database"
ROLE_MAPPING["elk"]="database"

# –û–±—Ö–æ–¥ –≤—Å–µ—Ö `tasks/*.yml` —Ñ–∞–π–ª–æ–≤ –≤–æ –≤—Å–µ—Ö —Ä–æ–ª—è—Ö
for role in "${!ROLE_MAPPING[@]}"; do
    for task_file in roles/$role/tasks/*.yml; do
        if [ -f "$task_file" ]; then
            for service in "${!SERVICES[@]}"; do
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ —Å–µ—Ä–≤–∏—Å —ç—Ç–æ–π —Ä–æ–ª–∏
                if [[ $role == *"$service"* ]]; then
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ñ–∞–π–ª–µ
                    if ! grep -q "–ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ $service" "$task_file"; then
                        cat <<EOF >> "$task_file"

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π $service
- name: –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ $service (Debian)
  shell: ${SERVICES[$service]}
  register: ${service}_check
  ignore_errors: yes
  changed_when: false

- name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $service (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)
  ansible.builtin.apt:
    name: $service
    state: present
  when: ansible_os_family == "Debian" and ${service}_check.rc != 0

- name: –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ $service (RHEL)
  shell: rpm -q $service
  register: ${service}_check
  ignore_errors: yes
  changed_when: false

- name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $service (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)
  ansible.builtin.yum:
    name: $service
    state: present
  when: ansible_os_family == "RedHat" and ${service}_check.rc != 0

EOF
                        echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è $service –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ $task_file"
                    else
                        echo "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è $service —É–∂–µ –µ—Å—Ç—å –≤ $task_file, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º."
                    fi
                fi
            done
        fi
    done
done

echo "üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É!"

